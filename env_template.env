# =============================================================================
# RAG Python Module Environment Configuration
# =============================================================================
# 
# This file contains all the environment variables needed to configure
# the RAG Python module. Edit these values according to your setup.
#
# IMPORTANT: Never commit this file to version control!
# =============================================================================

# =============================================================================
# REQUIRED: Google Gemini API Configuration
# =============================================================================

# Your Google Gemini API key (REQUIRED)
# Get your free API key from: https://makersuite.google.com/app/apikey
# This is used for generating embeddings for document indexing and search
GOOGLE_API_KEY=AIzaSyD1I-pz8UGOuQoptou-1YoWYlkc63I6viQ

# =============================================================================
# REQUIRED: PostgreSQL Database Configuration
# =============================================================================

# PostgreSQL host (REQUIRED)
# Default: localhost (change if using remote database)
POSTGRES_HOST=localhost

# PostgreSQL port (REQUIRED)
# Default: 5432 (standard PostgreSQL port)
POSTGRES_PORT=5432

# PostgreSQL database name (REQUIRED)
# Default: rag_database (create this database in PostgreSQL)
POSTGRES_DB=rag_database

# PostgreSQL username (REQUIRED)
# Default: user_name (create this user in PostgreSQL)
POSTGRES_USER=dolevsaliman

# PostgreSQL password (REQUIRED)
# Set this to your actual database password
POSTGRES_PASSWORD=123456


# =============================================================================
# OPTIONAL: Database Schema Configuration
# =============================================================================

# Table name for storing embeddings (OPTIONAL)
# Default: document_embeddings
EMBEDDINGS_TABLE=document_embeddings

# Vector dimension for embeddings (OPTIONAL)
# Default: 768 (adjust based on your Gemini model)
# Note: This must match the actual embedding dimension from Gemini API
VECTOR_DIMENSION=768

# =============================================================================
# OPTIONAL: Embedding Model Configuration
# =============================================================================

# Gemini embedding model to use (OPTIONAL)
# Default: models/embedding-001
# Available models:
# - models/embedding-001 (recommended, high quality)
# Note: This is the only embedding model currently supported by Gemini API
GEMINI_EMBEDDING_MODEL=models/embedding-001

# =============================================================================
# OPTIONAL: Text Processing Configuration
# =============================================================================

# Default chunk size for text processing (OPTIONAL)
# Default: 1000 characters
# This controls how large each text chunk will be when processing documents
# Smaller chunks = more precise search, larger chunks = more context
DEFAULT_CHUNK_SIZE=1000

# Default overlap between text chunks (OPTIONAL)
# Default: 200 characters
# This ensures context is preserved between chunks
# Higher overlap = better context preservation, but more storage
DEFAULT_CHUNK_OVERLAP=200

# Split strategy to use (OPTIONAL)
# Default: sentence_boundary
# Options: sentence_boundary, fixed_size, semantic
# Controls how text is split into chunks
SPLIT_STRATEGY=sentence_boundary

# =============================================================================
# OPTIONAL: Search Configuration
# =============================================================================

# Default number of search results to return (OPTIONAL)
# Default: 5
# This controls how many results are returned by default
DEFAULT_SEARCH_RESULTS=5

# Default similarity threshold for search results (OPTIONAL)
# Default: 0.5 (50% similarity)
# Range: 0.0 to 1.0
# Higher values = more strict matching, lower values = more results
DEFAULT_SIMILARITY_THRESHOLD=0.5

# =============================================================================
# OPTIONAL: Logging Configuration
# =============================================================================

# Logging level (OPTIONAL)
# Default: INFO
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
# Set to DEBUG for detailed logging, ERROR for minimal logging
LOG_LEVEL=INFO

# Enable/disable API call logging (OPTIONAL)
# Default: true
# Set to false to disable logging of API calls to Gemini
LOG_API_CALLS=true

# =============================================================================
# OPTIONAL: Performance Configuration
# =============================================================================

# Batch size for embedding generation (OPTIONAL)
# Default: 10
# Number of text chunks to process in parallel during indexing
# Higher values = faster processing, but may hit API rate limits
EMBEDDING_BATCH_SIZE=10

# API request timeout in seconds (OPTIONAL)
# Default: 30
# How long to wait for Gemini API responses
API_TIMEOUT=30

# Database connection pool size (OPTIONAL)
# Default: 5
# Number of database connections to maintain
DB_POOL_SIZE=5

# =============================================================================
# OPTIONAL: Security Configuration
# =============================================================================

# Enable API key validation on startup (OPTIONAL)
# Default: true
# Set to false to skip API key validation (not recommended)
VALIDATE_API_KEY=true

# =============================================================================
# DEVELOPMENT/DEBUGGING (OPTIONAL)
# =============================================================================

# Enable debug mode (OPTIONAL)
# Default: false
# Set to true for additional debugging information
DEBUG_MODE=false

# Test mode - uses smaller chunks and fewer results (OPTIONAL)
# Default: false
# Useful for testing with limited API usage
TEST_MODE=false

# =============================================================================
# QUICK SETUP CHECKLIST
# =============================================================================
#
# Before running the module, ensure you have:
#
# 1. ✅ Set GOOGLE_API_KEY to your actual Gemini API key
# 2. ✅ Set POSTGRES_PASSWORD to your actual database password
# 3. ✅ Created the PostgreSQL database: rag_database
# 4. ✅ Created the PostgreSQL user: user_name
# 5. ✅ Installed pgvector extension in your database
# 6. ✅ Granted proper permissions to the user
#
# =============================================================================
# POSTGRESQL SETUP COMMANDS
# =============================================================================
#
# Run these commands as PostgreSQL superuser:
#
# CREATE DATABASE rag_database;
# CREATE USER user_name WITH PASSWORD 'your_secure_password';
# GRANT ALL PRIVILEGES ON DATABASE rag_database TO user_name;
# \c rag_database
# CREATE EXTENSION vector;
#
# =============================================================================
# NOTES:
# =============================================================================
#
# 1. All paths can be absolute or relative to the current directory
# 2. Boolean values can be: true, false, 1, 0, yes, no
# 3. Numeric values should be integers or floats
# 4. The module will use defaults for any missing values
# 5. Environment variables take precedence over .env file values
# 6. Never commit this file to version control
# 7. PostgreSQL password is required for database connection
# 8. Ensure pgvector extension is installed in your PostgreSQL instance
# 9. Test your database connection before running the module
#
# =============================================================================
